diff --git a/targets/libpng/build.sh b/targets/libpng/build.sh
index 9d2dd009..41d9b8ee 100755
--- a/targets/libpng/build.sh
+++ b/targets/libpng/build.sh
@@ -18,12 +18,4 @@ cd "$TARGET/repo"
 autoreconf -f -i
 ./configure --with-libpng-prefix=MAGMA_ --disable-shared
 make -j$(nproc) clean
-make -j$(nproc) libpng16.la
-
-cp .libs/libpng16.a "$OUT/"
-
-# build libpng_read_fuzzer.
-$CXX $CXXFLAGS -std=c++11 -I. \
-     contrib/oss-fuzz/libpng_read_fuzzer.cc \
-     -o $OUT/libpng_read_fuzzer \
-     $LDFLAGS .libs/libpng16.a $LIBS -lz
\ No newline at end of file
+make libpng16.la
diff --git a/targets/libsndfile/build.sh b/targets/libsndfile/build.sh
index 89a808d9..1f343236 100755
--- a/targets/libsndfile/build.sh
+++ b/targets/libsndfile/build.sh
@@ -15,8 +15,6 @@ fi
 
 cd "$TARGET/repo"
 ./autogen.sh
-./configure --disable-shared --enable-ossfuzzers
+./configure --disable-shared
 make -j$(nproc) clean
-make -j$(nproc) ossfuzz/sndfile_fuzzer
-
-cp -v ossfuzz/sndfile_fuzzer $OUT/
+make -j$(nproc)
diff --git a/targets/libtiff/build.sh b/targets/libtiff/build.sh
index fad7e494..2825d38b 100755
--- a/targets/libtiff/build.sh
+++ b/targets/libtiff/build.sh
@@ -23,10 +23,3 @@ cd "$TARGET/repo"
 ./configure --disable-shared --prefix="$WORK"
 make -j$(nproc) clean
 make -j$(nproc)
-make install
-
-cp "$WORK/bin/tiffcp" "$OUT/"
-$CXX $CXXFLAGS -std=c++11 -I$WORK/include \
-    contrib/oss-fuzz/tiff_read_rgba_fuzzer.cc -o $OUT/tiff_read_rgba_fuzzer \
-    $WORK/lib/libtiffxx.a $WORK/lib/libtiff.a -lz -ljpeg -Wl,-Bstatic -llzma -Wl,-Bdynamic \
-    $LDFLAGS $LIBS
diff --git a/targets/libxml2/build.sh b/targets/libxml2/build.sh
index fb216a88..02e83b09 100755
--- a/targets/libxml2/build.sh
+++ b/targets/libxml2/build.sh
@@ -21,12 +21,4 @@ cd "$TARGET/repo"
 	--with-threads=no \
 	--disable-shared
 make -j$(nproc) clean
-make -j$(nproc) all
-
-cp xmllint "$OUT/"
-
-for fuzzer in libxml2_xml_read_memory_fuzzer libxml2_xml_reader_for_file_fuzzer; do
-  $CXX $CXXFLAGS -std=c++11 -Iinclude/ -I"$TARGET/src/" \
-      "$TARGET/src/$fuzzer.cc" -o "$OUT/$fuzzer" \
-      .libs/libxml2.a $LDFLAGS $LIBS -lz -llzma
-done
+make all -j$(nproc)
diff --git a/targets/lua/build.sh b/targets/lua/build.sh
index cb1f03d5..dc38c495 100755
--- a/targets/lua/build.sh
+++ b/targets/lua/build.sh
@@ -16,10 +16,4 @@ fi
 # build lua library
 cd "$TARGET/repo"
 make -j$(nproc) clean
-make -j$(nproc) liblua.a
-
-cp liblua.a "$OUT/"
-
-# build driver
-make -j$(nproc) lua
-cp lua "$OUT/"
+make -j$(nproc) liblua.a lua
diff --git a/targets/openssl/build.sh b/targets/openssl/build.sh
index 965f44cf..1c28f644 100755
--- a/targets/openssl/build.sh
+++ b/targets/openssl/build.sh
@@ -24,17 +24,11 @@ fi
 # the config script supports env var LDLIBS instead of LIBS
 export LDLIBS="$LIBS"
 
-./config --debug enable-fuzz-libfuzzer enable-fuzz-afl disable-tests -DPEDANTIC \
-    -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION no-shared no-module \
+./config --debug disable-tests -DPEDANTIC \
+    no-shared no-module \
     enable-tls1_3 enable-rc5 enable-md2 enable-ec_nistp_64_gcc_128 enable-ssl3 \
     enable-ssl3-method enable-nextprotoneg enable-weak-ssl-ciphers \
     $CFLAGS -fno-sanitize=alignment $CONFIGURE_FLAGS
 
 make -j$(nproc) clean
 make -j$(nproc) LDCMD="$CXX $CXXFLAGS"
-
-fuzzers=$(find fuzz -executable -type f '!' -name \*.py '!' -name \*-test '!' -name \*.pl)
-for f in $fuzzers; do
-    fuzzer=$(basename $f)
-    cp $f "$OUT/"
-done
diff --git a/targets/php/build.sh b/targets/php/build.sh
index 7207c0b8..1374dae2 100755
--- a/targets/php/build.sh
+++ b/targets/php/build.sh
@@ -29,10 +29,8 @@ unset CXXFLAGS
 LIB_FUZZING_ENGINE="-Wall" ./configure \
     --disable-all \
     --enable-option-checking=fatal \
-    --enable-fuzzer \
     --enable-exif \
     --enable-phar \
-    --enable-intl \
     --enable-mbstring \
     --without-pcre-jit \
     --disable-phpdbg \
@@ -48,18 +46,4 @@ autoreconf -vfi
 make -j$(nproc)
 popd
 
-make -j$(nproc)
-
-# Generate seed corpora
-sapi/cli/php sapi/fuzzer/generate_unserialize_dict.php
-sapi/cli/php sapi/fuzzer/generate_parser_corpus.php
-
-FUZZERS="php-fuzz-json php-fuzz-exif php-fuzz-mbstring php-fuzz-unserialize php-fuzz-parser"
-for fuzzerName in $FUZZERS; do
-	cp sapi/fuzzer/$fuzzerName "$OUT/${fuzzerName/php-fuzz-/}"
-done
-
-for fuzzerName in `ls sapi/fuzzer/corpus`; do
-    mkdir -p "$TARGET/corpus/${fuzzerName}"
-    cp sapi/fuzzer/corpus/${fuzzerName}/* "$TARGET/corpus/${fuzzerName}/"
-done
+make
diff --git a/targets/poppler/build.sh b/targets/poppler/build.sh
index 973b39c5..aa555556 100755
--- a/targets/poppler/build.sh
+++ b/targets/poppler/build.sh
@@ -59,11 +59,3 @@ cmake "$TARGET/repo" \
   -DICONV_LIBRARIES="/usr/lib/x86_64-linux-gnu/libc.so" \
   -DCMAKE_EXE_LINKER_FLAGS_INIT="$LIBS"
 make -j$(nproc) poppler poppler-cpp pdfimages pdftoppm
-EXTRA=""
-
-cp "$WORK/poppler/utils/"{pdfimages,pdftoppm} "$OUT/"
-$CXX $CXXFLAGS -std=c++11 -I"$WORK/poppler/cpp" -I"$TARGET/repo/cpp" \
-    "$TARGET/src/pdf_fuzzer.cc" -o "$OUT/pdf_fuzzer" \
-    "$WORK/poppler/cpp/libpoppler-cpp.a" "$WORK/poppler/libpoppler.a" \
-    "$WORK/lib/libfreetype.a" $LDFLAGS $LIBS -ljpeg -lz \
-    -lopenjp2 -lpng -ltiff -llcms2 -lm -lpthread -pthread
diff --git a/targets/sqlite3/build.sh b/targets/sqlite3/build.sh
index 08a3e611..9d309065 100755
--- a/targets/sqlite3/build.sh
+++ b/targets/sqlite3/build.sh
@@ -30,10 +30,4 @@ export CFLAGS="$CFLAGS -DSQLITE_MAX_LENGTH=128000000 \
 
 "$TARGET/repo"/configure --disable-shared --enable-rtree
 make clean
-make -j$(nproc)
 make sqlite3.c
-
-$CC $CFLAGS -I. \
-    "$TARGET/repo/test/ossfuzz.c" "./sqlite3.o" \
-    -o "$OUT/sqlite3_fuzz" \
-    $LDFLAGS $LIBS -pthread -ldl -lm
